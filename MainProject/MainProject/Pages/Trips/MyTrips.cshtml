@page
@model MainProject.Pages.Trips.MyTripsModel
@{
    int FirstIndex = -1;
    int SecondIndex = -1;
    ////////////////////////
    string TripIDSubmitted = "";
    string Gallery = ViewData["Gallery"].ToString();
    ViewData["Title"] = "My Trips";
    TripDBInteract DB = new TripDBInteract();
    List<int> Trips = new List<int>();
    if (User.Identity.Name.ToLower() == "admin")
    {
        Trips = DB.GetAccessable("admin");
    } else
    {
        Trips = DB.GetAccessable(User.Identity.Name);
    }
}
<style>
    .card:hover{
        box-shadow : -1px 9px 40px -12px #808080;
    }
</style>

<input type="hidden" name="TripIndexerString" id="TripIndexerString" asp-for="TripIndexerString">
<input type="hidden" name="AmountOfPeopleString" id="AmountOfPeopleString" asp-for="AmountOfPeopleString">
<input type="hidden" name="IDListString" id="IDListString" asp-for="IDListString">
<input type="hidden" name="NameListString" id="NameListString" asp-for="NameListString">
<input type="hidden" name="EmailListString" id="EmailListString" asp-for="EmailListString">
<input type="hidden" name="PhoneListString" id="PhoneListString" asp-for="PhoneListString">

<h1 class="text-center my-5">My Trips</h1>
<div class="container d-flex flex-wrap" style="text-align: center; justify-content: center">
    @foreach (var trip in Trips)
    {
        List<string> CardTrip = DB.GetTrip(trip);
        List<string> Members = DB.GetMembersNames(int.Parse(CardTrip[0]));
        string TripName = CardTrip[1];
        bool AddTitleGap = false;
        if (TripName.Length < 15) // Only one line.
        {
            AddTitleGap = true;
        }
        if (TripName.Length > 28)
        {
            List<string> ReconstructString = new List<string>();
            for (int i = 0; i < 26; i++)
            {
                ReconstructString.Add(TripName[i].ToString());
            }
            ReconstructString.Add(".");
            ReconstructString.Add(".");
            ReconstructString.Add(".");
            TripName = string.Join("", ReconstructString.ToArray());
        }
        int memberValue = Members.Count();
        int supplementGap = 0;
        bool indicate = false;
        if (memberValue < 3)
        {
            supplementGap = 3 - memberValue;
        } else if (memberValue > 3)
        {
            indicate = true;
        }
        <div class="card" style="width: 22%; margin-right: 1%; margin-bottom: 1%">
            <a href="../Trips/Gallery/?tripID=@CardTrip[0]">
                <img class="card-img-top" src="" onerror="this.onerror=null; this.src='/Gallery/Default.jpg'">
            </a>
            <div class="card-body">
                <a href="../Trips/MyTrip/?tripID=@CardTrip[0]">
                    <h5 style="font-size: 20px;" class="card-title">@(TripName)</h5>
                    @if (AddTitleGap)
                    {
                        <br style="font-size:20px;"/>
                    }
                </a>
                <a class="btn btn-primary" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">
                    <div onclick="GetPeopleInformation(@CardTrip[0])">
                        <h5 style="font-size: 18px; text-decoration: underline; cursor: pointer;" class="card-text">Members:</h5>
                    </div>
                </a>
                @if (indicate)
                {
                    for (int i = 0; i < 2; i++)
                    {
                        <p style="font-size: 14px;" class="card-title">@(Members[i])</p>
                    }
                    <p style="font-size: 14px;" class="card-title">...</p>
                }
                else
                {
                    for (int i = 0; i < Members.Count; i++)
                    {
                        <p style="font-size: 14px;" class="card-title">@(Members[i])</p>
                    }
                    for (int j = 0; j < supplementGap; j++)
                    {
                        <br />
                    }
                }
            </div>
            <div class="card-footer text-muted">
                <form id="form" method="post">
                    <input type="hidden" name="TripID" value="@CardTrip[0]"/>
                    <button class="btn btn-danger" type="submit">Delete This Trip</button>
                </form>
            </div>
        </div>
    }
    <a href="../Trips/CreateTrip" class="card" style="width: 22%; margin-right: 1%; margin-bottom: 1%">
        <img class="card-img-top" src="/Gallery/AddTrip.jpg" onerror="this.onerror=null;">
        <div class="card-body">
            <h5 style="font-size: 20px;" class="card-title">Create a new Trip!</h5>
        </div>
    </a>
</div>

<style>
    /* Shaded borders between cells */
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        border: 1px solid #dddddd;
        padding: 0;
        text-align: center;
    }

    .cell-content {
        width: 150px; 
        overflow-x: auto;
        white-space: nowrap;
        -ms-overflow-style: none; /* for Internet Explorer, Edge */
        scrollbar-width: none; /* for Firefox */
    }

    /* Horizontal scrolling */
    .table-container {
        overflow-y: auto;
        -ms-overflow-style: none; /* for Internet Explorer, Edge */
        scrollbar-width: none; /* for Firefox */
    }
</style>

<div style="width: 75%" class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">Member Information</h5>
        <button type="button" class="btn btn-info" onclick="ResetTable()">Reset Content</button>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>Account ID</th>
                        <th>Username</th>
                        <th>Email Address</th>
                        <th>Phone Number</th>
                    </tr>
                </thead>
                <tbody id="tableBody">

                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function ResetTable() {
        var tableBody = document.getElementById("tableBody");
        tableBody.innerHTML = "";
    }
    function addRow(ID, Name, Email, Phone) {
        var tableBody = document.getElementById("tableBody");
        var newRow = document.createElement("tr");

        var cell = document.createElement("td");
        var cellContent = document.createElement("div");
        cellContent.className = "cell-content";
        cellContent.textContent = ID;
        cell.appendChild(cellContent);
        newRow.appendChild(cell);

        var cell = document.createElement("td");
        var cellContent = document.createElement("div");
        cellContent.className = "cell-content";
        cellContent.textContent = Name;
        cell.appendChild(cellContent);
        newRow.appendChild(cell);

        var cell = document.createElement("td");
        var cellContent = document.createElement("div");
        cellContent.className = "cell-content";
        cellContent.textContent = Email;
        cell.appendChild(cellContent);
        newRow.appendChild(cell);

        var cell = document.createElement("td");
        var cellContent = document.createElement("div");
        cellContent.className = "cell-content";
        cellContent.textContent = Phone;
        cell.appendChild(cellContent);
        newRow.appendChild(cell);

        tableBody.appendChild(newRow);
    }

    function GetPeopleInformation(tripID) {
        ResetTable();
        console.log(document.getElementById("TripIndexerString").value);
        console.log(document.getElementById("AmountOfPeopleString").value);
        console.log(document.getElementById("IDListString").value);
        console.log(document.getElementById("NameListString").value);
        console.log(document.getElementById("EmailListString").value);
        console.log(document.getElementById("PhoneListString").value);

        var TripOrder = (document.getElementById("TripIndexerString").value).split("-");
        console.log(TripOrder);
        var FoundIndex = -1;
        for (var x = 0; x < TripOrder.length; x++) {
            if (tripID == TripOrder[x]) {
                FoundIndex = x;
                break;
            }
        }

        var IdsInTrip = (document.getElementById("IDListString").value).split("|");
        var NamesInTrip = (document.getElementById("NameListString").value).split("|");
        var EmailsInTrip = (document.getElementById("EmailListString").value).split("|");
        var PhonesInTrip = (document.getElementById("PhoneListString").value).split("|");

        var AmountOfFields = ((document.getElementById("AmountOfPeopleString").value).split("-"))[FoundIndex];

        console.log("Found at Index: " + FoundIndex);
        console.log("Amount of Fields Known: " + AmountOfFields);
        console.log(NamesInTrip);

        var ThisTripsIDs = IdsInTrip[FoundIndex].split("/");
        var ThisTripsNames = NamesInTrip[FoundIndex].split("/");
        var ThisTripsEmails = EmailsInTrip[FoundIndex].split("/");
        var ThisTripsPhones = PhonesInTrip[FoundIndex].split("/");
        for (var i = 0; i < AmountOfFields; i++) {
            addRow(ThisTripsIDs[i], ThisTripsNames[i], ThisTripsEmails[i], ThisTripsPhones[i]);
        }
    }
</script>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript">
    $('.card').hover(
        function () {
            $(this).animate({
                marginTop: "-=1%",
                marginBottom: "+=1%"
            }, 200)
        },
        function () {
            $(this).animate({
                marginTop: "+=1%",
                marginBottom: "-=1%"
            })
        }
    )
</script>